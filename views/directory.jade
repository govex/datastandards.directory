html
  head
    title Directory
    // stylesheets
    include head.jade
  body
    .container
      include header.jade
      .site-content
        h1 OPEN DATA STANDARDS DIRECTORY
        .directory
          .directory-results
            #standards
              include standards.jade
        include footer.jade
    script(type='text/javascript').
      var standard = $('#standards').find('.standard-container')
      var standards = [];
      for (var i = 0; i < standard.length; i++){
        standards.push(standard[i]);
      }
      $('.standard-container').each(function(){
        var header = $(this).find('strong.standard-items');
        var updated = $(header).find('#updated');
        var added = $(header).find('#added');
        var updatedDate = createDates($(updated).attr('value'));
        var addedDate = createDates($(added).attr('value'));
        var updatedRel = new moment(updatedDate);
        var addedRel = new moment(addedDate);
        // div values are set to the new Date object, for sorting purposes
        $(updated).attr('value', updatedDate);
        $(added).attr('value', addedDate);
        $(updated).html("Published: <i>" + updatedRel.fromNow() + "</i>");
        $(added).html(" | Updated in directory: <i>" + addedRel.fromNow() + "</i> ");
        // version only displayed if necessary
        if ($(header).find('#version').attr('value') == 'No information'){
          $(header).find('#version').html("")
        }
        var body = $(this).find('.standard-body');
        // full dates are now displayed in the standard's details
        $(body).find('#updatedFull').html("<b>Updated by Publisher:</b> " + updatedRel.format('Do MMMM YYYY'));
        $(body).find('#addedFull').html("<b>Updated in directory:</b> " + addedRel.format('Do MMMM YYYY'));
        // hides specific empty fields
        $(body).find("li").each(function(){
          if ($(this).attr('value') == 'No information'){
            $(this).hide();
          }
        })
        // Build list of providers
        var providerList = $(body).find('#providers').attr('value');
        if (providerList != 'No information') {
          var providers = [];
          providers = providerList.split('|');
          providers.sort();
          $(body).find('#providers').attr('count', providers.length); //sets value of div to the number of providers, for sorting purposes
          var list = '';
          for (var i = 0; i < providers.length-1; i++){
            list += providers[i] + '<b> | </b>'
          }
          list += providers[providers.length-1];
          $(body).find('#provider-list').html(list);
        }
        else{
          $(body).find('#providers').hide();
        }
        // disables buttons with empty targets
        $(this).find('.standard-links').children("a").each(function(){
          if ($(this).attr('href') == "No information"){
            $(this).attr('onclick', 'return false;');
            $(this).children("button").css("cursor", "not-allowed");
            $(this).children("button").css("opacity", "0.4");
            $(this).children("button").css("z-index", "1");
          }	
        })
      });
      moment().format('Do MMMM YYYY');
    - if (standards.length > 1)
      script.
        var sorted = sortby(standards)
        $('.directory-standards').html(sorted); // sorts standards by default dropdown selection
        clickStandard();
        $('#sortby').on('change', function() { // resorts standards when dropdown selection is changed
          sorted = sortby(standards)
          $('.directory-standards').html(sorted);
          clickStandard();
        });
